import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

import 'count_manager.dart';

class Search extends StatefulWidget {
  const Search({Key? key}) : super(key: key);

  @override
  State<Search> createState() => _SearchState();
}

class _SearchState extends State<Search> {

  FocusNode _searchFocusNode = FocusNode();

  @override
  Widget build(BuildContext context) {
    print("Builder");
    return  Scaffold(
      backgroundColor: Colors.blue,
      body: Column(
        mainAxisAlignment: MainAxisAlignment.start,
        children: [
          Padding(
            padding: const EdgeInsets.only(left:8,right:8,top: 50.0),
            child:

            Consumer<CountManager>(
              builder: (context, counterProvider, _) {
                return TextFormField(
                  focusNode: _searchFocusNode,


                  onChanged: (value){
                    counterProvider.update(value);



                  },
                  style: TextStyle(color: Colors.white),
                  decoration: InputDecoration(

                      filled: true,
                      fillColor: Colors.blue.shade600,
                      border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(8),
                          borderSide: BorderSide.none
                      ),
                      hintText: "eg: Hair Cut",
                      prefixIcon: Icon(Icons.search),
                      prefixIconColor: Colors.blue.shade400
                  ),
                );
              },
            ),
          ),

          Consumer<CountManager>(
            builder: (context, counterProvider, _) {
              return  Expanded(
                child: counterProvider.aa ==0 ?Center(child: Text("Not Result Found"),) :ListView.builder(itemCount: counterProvider.aa.length,
                    itemBuilder: (context,index){
                      return ListTile(
                        onTap: (){
                          print(counterProvider.aa[index]);
                        },
                        leading: Text(index.toString()),
                        trailing: Icon(Icons.arrow_forward),
                        title: Text("${counterProvider.aa[index]}"),
                      );

                    }),
              );

            },
          ),


        ],
      ),
    );
  }
}
====
import 'package:flutter/cupertino.dart';

class CountManager extends  ChangeNotifier{
  int _counter = 0;
  int get counter=>_counter;
  increment(){
    _counter++;
    notifyListeners();
  }


  static List<String> list123 = ["Apple","Banana","Orange","Pinaple","Mango","Samosa","Tomata","Apple","Banana","Orange","Pinaple","Mango","Samosa","Tomata","Apple","Banana","Orange","Pinaple","Mango","Samosa","Tomata","Apple","Banana","Orange","Pinaple","Mango","Samosa","Tomata","Apple","Banana","Orange","Pinaple","Mango","Samosa","Tomata","Apple","Banana","Orange","Pinaple","Mango","Samosa","Tomata","Apple","Banana","Orange","Pinaple","Mango","Samosa","Tomata"];
  List<String> _a = List.from(list123);
  List<String> get aa =>_a;


  update(String b){

    _a = list123.where((element) => element.toLowerCase().contains(b.toLowerCase())).toList();
    notifyListeners();
  }




}


====

import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:statemanager/search.dart';

import 'count_manager.dart';
import 'home.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {

    return MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (_) => CountManager()),

      ],
      child:  MaterialApp(
        title: 'Flutter Demo',
        theme: ThemeData(
          // This is the theme of your application.
          //
          // Try running your application with "flutter run". You'll see the
          // application has a blue toolbar. Then, without quitting the app, try
          // changing the primarySwatch below to Colors.green and then invoke
          // "hot reload" (press "r" in the console where you ran "flutter run",
          // or simply save your changes to "hot reload" in a Flutter IDE).
          // Notice that the counter didn't reset back to zero; the application
          // is not restarted.
          primarySwatch: Colors.blue,
        ),
        home:  Search(),
      ),
    );

  }
}
